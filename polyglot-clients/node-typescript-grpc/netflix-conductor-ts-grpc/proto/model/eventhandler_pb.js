// source: model/eventhandler.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.conductor.proto.EventHandler', null, global);
goog.exportSymbol('proto.conductor.proto.EventHandler.Action', null, global);
goog.exportSymbol('proto.conductor.proto.EventHandler.Action.Type', null, global);
goog.exportSymbol('proto.conductor.proto.EventHandler.StartWorkflow', null, global);
goog.exportSymbol('proto.conductor.proto.EventHandler.TaskDetails', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conductor.proto.EventHandler = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conductor.proto.EventHandler.repeatedFields_, null);
};
goog.inherits(proto.conductor.proto.EventHandler, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conductor.proto.EventHandler.displayName = 'proto.conductor.proto.EventHandler';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conductor.proto.EventHandler.StartWorkflow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conductor.proto.EventHandler.StartWorkflow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conductor.proto.EventHandler.StartWorkflow.displayName = 'proto.conductor.proto.EventHandler.StartWorkflow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conductor.proto.EventHandler.TaskDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conductor.proto.EventHandler.TaskDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conductor.proto.EventHandler.TaskDetails.displayName = 'proto.conductor.proto.EventHandler.TaskDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conductor.proto.EventHandler.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conductor.proto.EventHandler.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conductor.proto.EventHandler.Action.displayName = 'proto.conductor.proto.EventHandler.Action';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conductor.proto.EventHandler.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conductor.proto.EventHandler.prototype.toObject = function(opt_includeInstance) {
  return proto.conductor.proto.EventHandler.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conductor.proto.EventHandler} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    event: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.conductor.proto.EventHandler.Action.toObject, includeInstance),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    evaluatorType: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conductor.proto.EventHandler}
 */
proto.conductor.proto.EventHandler.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conductor.proto.EventHandler;
  return proto.conductor.proto.EventHandler.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conductor.proto.EventHandler} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conductor.proto.EventHandler}
 */
proto.conductor.proto.EventHandler.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 4:
      var value = new proto.conductor.proto.EventHandler.Action;
      reader.readMessage(value,proto.conductor.proto.EventHandler.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluatorType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conductor.proto.EventHandler.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conductor.proto.EventHandler.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conductor.proto.EventHandler} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.conductor.proto.EventHandler.Action.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getEvaluatorType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.toObject = function(opt_includeInstance) {
  return proto.conductor.proto.EventHandler.StartWorkflow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conductor.proto.EventHandler.StartWorkflow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.StartWorkflow.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    correlationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    inputMap: (f = msg.getInputMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    inputMessage: (f = msg.getInputMessage()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    taskToDomainMap: (f = msg.getTaskToDomainMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow}
 */
proto.conductor.proto.EventHandler.StartWorkflow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conductor.proto.EventHandler.StartWorkflow;
  return proto.conductor.proto.EventHandler.StartWorkflow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conductor.proto.EventHandler.StartWorkflow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow}
 */
proto.conductor.proto.EventHandler.StartWorkflow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 4:
      var value = msg.getInputMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setInputMessage(value);
      break;
    case 6:
      var value = msg.getTaskToDomainMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conductor.proto.EventHandler.StartWorkflow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conductor.proto.EventHandler.StartWorkflow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.StartWorkflow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInputMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getInputMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getTaskToDomainMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string correlation_id = 3;
 * @return {string}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.setCorrelationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, google.protobuf.Value> input = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.getInputMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.clearInputMap = function() {
  this.getInputMap().clear();
  return this;};


/**
 * optional google.protobuf.Any input_message = 5;
 * @return {?proto.google.protobuf.Any}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.getInputMessage = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
*/
proto.conductor.proto.EventHandler.StartWorkflow.prototype.setInputMessage = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.clearInputMessage = function() {
  return this.setInputMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.hasInputMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> task_to_domain = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.getTaskToDomainMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.conductor.proto.EventHandler.StartWorkflow} returns this
 */
proto.conductor.proto.EventHandler.StartWorkflow.prototype.clearTaskToDomainMap = function() {
  this.getTaskToDomainMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.conductor.proto.EventHandler.TaskDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conductor.proto.EventHandler.TaskDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.TaskDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taskRefName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    outputMap: (f = msg.getOutputMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    outputMessage: (f = msg.getOutputMessage()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    taskId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conductor.proto.EventHandler.TaskDetails}
 */
proto.conductor.proto.EventHandler.TaskDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conductor.proto.EventHandler.TaskDetails;
  return proto.conductor.proto.EventHandler.TaskDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conductor.proto.EventHandler.TaskDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conductor.proto.EventHandler.TaskDetails}
 */
proto.conductor.proto.EventHandler.TaskDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskRefName(value);
      break;
    case 3:
      var value = msg.getOutputMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOutputMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conductor.proto.EventHandler.TaskDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conductor.proto.EventHandler.TaskDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.TaskDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaskRefName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOutputMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getOutputMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string workflow_id = 1;
 * @return {string}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.getWorkflowId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler.TaskDetails} returns this
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.setWorkflowId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string task_ref_name = 2;
 * @return {string}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.getTaskRefName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler.TaskDetails} returns this
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.setTaskRefName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, google.protobuf.Value> output = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.getOutputMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.conductor.proto.EventHandler.TaskDetails} returns this
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.clearOutputMap = function() {
  this.getOutputMap().clear();
  return this;};


/**
 * optional google.protobuf.Any output_message = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.getOutputMessage = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.conductor.proto.EventHandler.TaskDetails} returns this
*/
proto.conductor.proto.EventHandler.TaskDetails.prototype.setOutputMessage = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.EventHandler.TaskDetails} returns this
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.clearOutputMessage = function() {
  return this.setOutputMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.hasOutputMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string task_id = 5;
 * @return {string}
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler.TaskDetails} returns this
 */
proto.conductor.proto.EventHandler.TaskDetails.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conductor.proto.EventHandler.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.conductor.proto.EventHandler.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conductor.proto.EventHandler.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    action: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startWorkflow: (f = msg.getStartWorkflow()) && proto.conductor.proto.EventHandler.StartWorkflow.toObject(includeInstance, f),
    completeTask: (f = msg.getCompleteTask()) && proto.conductor.proto.EventHandler.TaskDetails.toObject(includeInstance, f),
    failTask: (f = msg.getFailTask()) && proto.conductor.proto.EventHandler.TaskDetails.toObject(includeInstance, f),
    expandInlineJson: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conductor.proto.EventHandler.Action}
 */
proto.conductor.proto.EventHandler.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conductor.proto.EventHandler.Action;
  return proto.conductor.proto.EventHandler.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conductor.proto.EventHandler.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conductor.proto.EventHandler.Action}
 */
proto.conductor.proto.EventHandler.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.conductor.proto.EventHandler.Action.Type} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 2:
      var value = new proto.conductor.proto.EventHandler.StartWorkflow;
      reader.readMessage(value,proto.conductor.proto.EventHandler.StartWorkflow.deserializeBinaryFromReader);
      msg.setStartWorkflow(value);
      break;
    case 3:
      var value = new proto.conductor.proto.EventHandler.TaskDetails;
      reader.readMessage(value,proto.conductor.proto.EventHandler.TaskDetails.deserializeBinaryFromReader);
      msg.setCompleteTask(value);
      break;
    case 4:
      var value = new proto.conductor.proto.EventHandler.TaskDetails;
      reader.readMessage(value,proto.conductor.proto.EventHandler.TaskDetails.deserializeBinaryFromReader);
      msg.setFailTask(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpandInlineJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conductor.proto.EventHandler.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conductor.proto.EventHandler.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conductor.proto.EventHandler.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.EventHandler.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStartWorkflow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.conductor.proto.EventHandler.StartWorkflow.serializeBinaryToWriter
    );
  }
  f = message.getCompleteTask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.conductor.proto.EventHandler.TaskDetails.serializeBinaryToWriter
    );
  }
  f = message.getFailTask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.conductor.proto.EventHandler.TaskDetails.serializeBinaryToWriter
    );
  }
  f = message.getExpandInlineJson();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.conductor.proto.EventHandler.Action.Type = {
  START_WORKFLOW: 0,
  COMPLETE_TASK: 1,
  FAIL_TASK: 2
};

/**
 * optional Type action = 1;
 * @return {!proto.conductor.proto.EventHandler.Action.Type}
 */
proto.conductor.proto.EventHandler.Action.prototype.getAction = function() {
  return /** @type {!proto.conductor.proto.EventHandler.Action.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.conductor.proto.EventHandler.Action.Type} value
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
 */
proto.conductor.proto.EventHandler.Action.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional StartWorkflow start_workflow = 2;
 * @return {?proto.conductor.proto.EventHandler.StartWorkflow}
 */
proto.conductor.proto.EventHandler.Action.prototype.getStartWorkflow = function() {
  return /** @type{?proto.conductor.proto.EventHandler.StartWorkflow} */ (
    jspb.Message.getWrapperField(this, proto.conductor.proto.EventHandler.StartWorkflow, 2));
};


/**
 * @param {?proto.conductor.proto.EventHandler.StartWorkflow|undefined} value
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
*/
proto.conductor.proto.EventHandler.Action.prototype.setStartWorkflow = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
 */
proto.conductor.proto.EventHandler.Action.prototype.clearStartWorkflow = function() {
  return this.setStartWorkflow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.Action.prototype.hasStartWorkflow = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TaskDetails complete_task = 3;
 * @return {?proto.conductor.proto.EventHandler.TaskDetails}
 */
proto.conductor.proto.EventHandler.Action.prototype.getCompleteTask = function() {
  return /** @type{?proto.conductor.proto.EventHandler.TaskDetails} */ (
    jspb.Message.getWrapperField(this, proto.conductor.proto.EventHandler.TaskDetails, 3));
};


/**
 * @param {?proto.conductor.proto.EventHandler.TaskDetails|undefined} value
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
*/
proto.conductor.proto.EventHandler.Action.prototype.setCompleteTask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
 */
proto.conductor.proto.EventHandler.Action.prototype.clearCompleteTask = function() {
  return this.setCompleteTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.Action.prototype.hasCompleteTask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TaskDetails fail_task = 4;
 * @return {?proto.conductor.proto.EventHandler.TaskDetails}
 */
proto.conductor.proto.EventHandler.Action.prototype.getFailTask = function() {
  return /** @type{?proto.conductor.proto.EventHandler.TaskDetails} */ (
    jspb.Message.getWrapperField(this, proto.conductor.proto.EventHandler.TaskDetails, 4));
};


/**
 * @param {?proto.conductor.proto.EventHandler.TaskDetails|undefined} value
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
*/
proto.conductor.proto.EventHandler.Action.prototype.setFailTask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
 */
proto.conductor.proto.EventHandler.Action.prototype.clearFailTask = function() {
  return this.setFailTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.Action.prototype.hasFailTask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool expand_inline_json = 5;
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.Action.prototype.getExpandInlineJson = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conductor.proto.EventHandler.Action} returns this
 */
proto.conductor.proto.EventHandler.Action.prototype.setExpandInlineJson = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.conductor.proto.EventHandler.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler} returns this
 */
proto.conductor.proto.EventHandler.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string event = 2;
 * @return {string}
 */
proto.conductor.proto.EventHandler.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler} returns this
 */
proto.conductor.proto.EventHandler.prototype.setEvent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string condition = 3;
 * @return {string}
 */
proto.conductor.proto.EventHandler.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler} returns this
 */
proto.conductor.proto.EventHandler.prototype.setCondition = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Action actions = 4;
 * @return {!Array<!proto.conductor.proto.EventHandler.Action>}
 */
proto.conductor.proto.EventHandler.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.conductor.proto.EventHandler.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conductor.proto.EventHandler.Action, 4));
};


/**
 * @param {!Array<!proto.conductor.proto.EventHandler.Action>} value
 * @return {!proto.conductor.proto.EventHandler} returns this
*/
proto.conductor.proto.EventHandler.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.conductor.proto.EventHandler.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conductor.proto.EventHandler.Action}
 */
proto.conductor.proto.EventHandler.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.conductor.proto.EventHandler.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conductor.proto.EventHandler} returns this
 */
proto.conductor.proto.EventHandler.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional bool active = 5;
 * @return {boolean}
 */
proto.conductor.proto.EventHandler.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conductor.proto.EventHandler} returns this
 */
proto.conductor.proto.EventHandler.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string evaluator_type = 6;
 * @return {string}
 */
proto.conductor.proto.EventHandler.prototype.getEvaluatorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.EventHandler} returns this
 */
proto.conductor.proto.EventHandler.prototype.setEvaluatorType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


goog.object.extend(exports, proto.conductor.proto);
