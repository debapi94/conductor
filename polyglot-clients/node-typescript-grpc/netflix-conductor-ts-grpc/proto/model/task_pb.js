// source: model/task.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var model_workflowtask_pb = require('../model/workflowtask_pb.js');
goog.object.extend(proto, model_workflowtask_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.conductor.proto.Task', null, global);
goog.exportSymbol('proto.conductor.proto.Task.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conductor.proto.Task = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conductor.proto.Task, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conductor.proto.Task.displayName = 'proto.conductor.proto.Task';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conductor.proto.Task.prototype.toObject = function(opt_includeInstance) {
  return proto.conductor.proto.Task.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conductor.proto.Task} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.Task.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    inputDataMap: (f = msg.getInputDataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    referenceTaskName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    retryCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    seq: jspb.Message.getFieldWithDefault(msg, 6, 0),
    correlationId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pollCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    taskDefName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    scheduledTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    startDelayInSeconds: jspb.Message.getFieldWithDefault(msg, 14, 0),
    retriedTaskId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    retried: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    executed: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    callbackFromWorker: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    responseTimeoutSeconds: jspb.Message.getFieldWithDefault(msg, 19, 0),
    workflowInstanceId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    workflowType: jspb.Message.getFieldWithDefault(msg, 21, ""),
    taskId: jspb.Message.getFieldWithDefault(msg, 22, ""),
    reasonForIncompletion: jspb.Message.getFieldWithDefault(msg, 23, ""),
    callbackAfterSeconds: jspb.Message.getFieldWithDefault(msg, 24, 0),
    workerId: jspb.Message.getFieldWithDefault(msg, 25, ""),
    outputDataMap: (f = msg.getOutputDataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    workflowTask: (f = msg.getWorkflowTask()) && model_workflowtask_pb.WorkflowTask.toObject(includeInstance, f),
    domain: jspb.Message.getFieldWithDefault(msg, 28, ""),
    inputMessage: (f = msg.getInputMessage()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    outputMessage: (f = msg.getOutputMessage()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    rateLimitPerFrequency: jspb.Message.getFieldWithDefault(msg, 32, 0),
    rateLimitFrequencyInSeconds: jspb.Message.getFieldWithDefault(msg, 33, 0),
    externalInputPayloadStoragePath: jspb.Message.getFieldWithDefault(msg, 34, ""),
    externalOutputPayloadStoragePath: jspb.Message.getFieldWithDefault(msg, 35, ""),
    workflowPriority: jspb.Message.getFieldWithDefault(msg, 36, 0),
    executionNameSpace: jspb.Message.getFieldWithDefault(msg, 37, ""),
    isolationGroupId: jspb.Message.getFieldWithDefault(msg, 38, ""),
    iteration: jspb.Message.getFieldWithDefault(msg, 40, 0),
    subWorkflowId: jspb.Message.getFieldWithDefault(msg, 41, ""),
    subworkflowChanged: jspb.Message.getBooleanFieldWithDefault(msg, 42, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conductor.proto.Task}
 */
proto.conductor.proto.Task.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conductor.proto.Task;
  return proto.conductor.proto.Task.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conductor.proto.Task} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conductor.proto.Task}
 */
proto.conductor.proto.Task.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskType(value);
      break;
    case 2:
      var value = /** @type {!proto.conductor.proto.Task.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = msg.getInputDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceTaskName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetryCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeq(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPollCount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskDefName(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledTime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartDelayInSeconds(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetriedTaskId(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRetried(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExecuted(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCallbackFromWorker(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResponseTimeoutSeconds(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowInstanceId(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowType(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setReasonForIncompletion(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallbackAfterSeconds(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkerId(value);
      break;
    case 26:
      var value = msg.getOutputDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 27:
      var value = new model_workflowtask_pb.WorkflowTask;
      reader.readMessage(value,model_workflowtask_pb.WorkflowTask.deserializeBinaryFromReader);
      msg.setWorkflowTask(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 29:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setInputMessage(value);
      break;
    case 30:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOutputMessage(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRateLimitPerFrequency(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRateLimitFrequencyInSeconds(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalInputPayloadStoragePath(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOutputPayloadStoragePath(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWorkflowPriority(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionNameSpace(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsolationGroupId(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIteration(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubWorkflowId(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSubworkflowChanged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conductor.proto.Task.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conductor.proto.Task.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conductor.proto.Task} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conductor.proto.Task.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInputDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getReferenceTaskName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRetryCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSeq();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPollCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTaskDefName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getScheduledTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getStartDelayInSeconds();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getRetriedTaskId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRetried();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getExecuted();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getCallbackFromWorker();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getResponseTimeoutSeconds();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getWorkflowInstanceId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getWorkflowType();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getReasonForIncompletion();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getCallbackAfterSeconds();
  if (f !== 0) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = message.getWorkerId();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getOutputDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(26, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getWorkflowTask();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      model_workflowtask_pb.WorkflowTask.serializeBinaryToWriter
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getInputMessage();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getOutputMessage();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitPerFrequency();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getRateLimitFrequencyInSeconds();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getExternalInputPayloadStoragePath();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getExternalOutputPayloadStoragePath();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getWorkflowPriority();
  if (f !== 0) {
    writer.writeInt32(
      36,
      f
    );
  }
  f = message.getExecutionNameSpace();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getIsolationGroupId();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getIteration();
  if (f !== 0) {
    writer.writeInt32(
      40,
      f
    );
  }
  f = message.getSubWorkflowId();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getSubworkflowChanged();
  if (f) {
    writer.writeBool(
      42,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.conductor.proto.Task.Status = {
  IN_PROGRESS: 0,
  CANCELED: 1,
  FAILED: 2,
  FAILED_WITH_TERMINAL_ERROR: 3,
  COMPLETED: 4,
  COMPLETED_WITH_ERRORS: 5,
  SCHEDULED: 6,
  TIMED_OUT: 7,
  SKIPPED: 8
};

/**
 * optional string task_type = 1;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getTaskType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setTaskType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.conductor.proto.Task.Status}
 */
proto.conductor.proto.Task.prototype.getStatus = function() {
  return /** @type {!proto.conductor.proto.Task.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.conductor.proto.Task.Status} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * map<string, google.protobuf.Value> input_data = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.conductor.proto.Task.prototype.getInputDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.clearInputDataMap = function() {
  this.getInputDataMap().clear();
  return this;};


/**
 * optional string reference_task_name = 4;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getReferenceTaskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setReferenceTaskName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 retry_count = 5;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getRetryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setRetryCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 seq = 6;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getSeq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setSeq = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string correlation_id = 7;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setCorrelationId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 poll_count = 8;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getPollCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setPollCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string task_def_name = 9;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getTaskDefName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setTaskDefName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 scheduled_time = 10;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getScheduledTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setScheduledTime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 start_time = 11;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 end_time = 12;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 update_time = 13;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setUpdateTime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 start_delay_in_seconds = 14;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getStartDelayInSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setStartDelayInSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string retried_task_id = 15;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getRetriedTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setRetriedTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool retried = 16;
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.getRetried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setRetried = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool executed = 17;
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.getExecuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setExecuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool callback_from_worker = 18;
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.getCallbackFromWorker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setCallbackFromWorker = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional int64 response_timeout_seconds = 19;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getResponseTimeoutSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setResponseTimeoutSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string workflow_instance_id = 20;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getWorkflowInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setWorkflowInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string workflow_type = 21;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getWorkflowType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setWorkflowType = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string task_id = 22;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string reason_for_incompletion = 23;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getReasonForIncompletion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setReasonForIncompletion = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional int64 callback_after_seconds = 24;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getCallbackAfterSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setCallbackAfterSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional string worker_id = 25;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getWorkerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * map<string, google.protobuf.Value> output_data = 26;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.conductor.proto.Task.prototype.getOutputDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 26, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.clearOutputDataMap = function() {
  this.getOutputDataMap().clear();
  return this;};


/**
 * optional WorkflowTask workflow_task = 27;
 * @return {?proto.conductor.proto.WorkflowTask}
 */
proto.conductor.proto.Task.prototype.getWorkflowTask = function() {
  return /** @type{?proto.conductor.proto.WorkflowTask} */ (
    jspb.Message.getWrapperField(this, model_workflowtask_pb.WorkflowTask, 27));
};


/**
 * @param {?proto.conductor.proto.WorkflowTask|undefined} value
 * @return {!proto.conductor.proto.Task} returns this
*/
proto.conductor.proto.Task.prototype.setWorkflowTask = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.clearWorkflowTask = function() {
  return this.setWorkflowTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.hasWorkflowTask = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string domain = 28;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional google.protobuf.Any input_message = 29;
 * @return {?proto.google.protobuf.Any}
 */
proto.conductor.proto.Task.prototype.getInputMessage = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 29));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.conductor.proto.Task} returns this
*/
proto.conductor.proto.Task.prototype.setInputMessage = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.clearInputMessage = function() {
  return this.setInputMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.hasInputMessage = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional google.protobuf.Any output_message = 30;
 * @return {?proto.google.protobuf.Any}
 */
proto.conductor.proto.Task.prototype.getOutputMessage = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 30));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.conductor.proto.Task} returns this
*/
proto.conductor.proto.Task.prototype.setOutputMessage = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.clearOutputMessage = function() {
  return this.setOutputMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.hasOutputMessage = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional int32 rate_limit_per_frequency = 32;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getRateLimitPerFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setRateLimitPerFrequency = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int32 rate_limit_frequency_in_seconds = 33;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getRateLimitFrequencyInSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setRateLimitFrequencyInSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional string external_input_payload_storage_path = 34;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getExternalInputPayloadStoragePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setExternalInputPayloadStoragePath = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string external_output_payload_storage_path = 35;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getExternalOutputPayloadStoragePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setExternalOutputPayloadStoragePath = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional int32 workflow_priority = 36;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getWorkflowPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setWorkflowPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 36, value);
};


/**
 * optional string execution_name_space = 37;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getExecutionNameSpace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setExecutionNameSpace = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string isolation_group_id = 38;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getIsolationGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setIsolationGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional int32 iteration = 40;
 * @return {number}
 */
proto.conductor.proto.Task.prototype.getIteration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setIteration = function(value) {
  return jspb.Message.setProto3IntField(this, 40, value);
};


/**
 * optional string sub_workflow_id = 41;
 * @return {string}
 */
proto.conductor.proto.Task.prototype.getSubWorkflowId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setSubWorkflowId = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional bool subworkflow_changed = 42;
 * @return {boolean}
 */
proto.conductor.proto.Task.prototype.getSubworkflowChanged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 42, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conductor.proto.Task} returns this
 */
proto.conductor.proto.Task.prototype.setSubworkflowChanged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 42, value);
};


goog.object.extend(exports, proto.conductor.proto);
